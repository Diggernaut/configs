---
config:
    debug: 2
    agent: Firefox
do:
- walk:
    to: https://www.dior.com/home/en_us
    headers:
        Cookie: siteaccess=en_us;has_js=0;
    do:
    - find: 
        path: .main-nav a 
        do: 
        - parse:
            attr: href
        - normalize:
            routine: url
        - walk:
            to: value
            headers:
                Cookie: siteaccess=en_us;
            do:
            - find: 
                path: .js-equalize a
                do: 
                - parse:
                    attr: href
                - normalize:
                    routine: url
                - walk:
                    to: value
                    headers:
                        Cookie: siteaccess=en_us;
                    do:
                    - find: 
                        path: .push-link 
                        do: 
                        - parse:
                            attr: href
                        - normalize:
                            routine: url
                        - link_add
- walk:
    to: links
    headers:
        accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
        cache-control: no-cache
        pragma: no-cache
        Cookie: CartItemsCount=0; userType=GUEST; siteaccess=en_us;
    do:
    - variable_clear: insp
    - object_new: product
    - find: 
        path: body 
        do: 
        - register_set: Dior
        - object_field_set:
            object: product
            field: brand
    - find: 
        path: .c-breadcrumb a, .breadcrumb a
        slice: 1:-1
        do: 
        - parse
        - space_dedupe
        - trim
        - normalize:
            routine: lower
        - object_field_set:
            object: product
            field: categories
            joinby: "|"
    - find: 
        path: .details-price 
        do: 
        - parse:
            filter:
                - (\d+\.?\d*)
        - if:
            match: (\d)
            do:
            - object_field_set:
                object: product
                field: price
                type: float
            - register_set: USD
            - object_field_set:
                object: product
                field: currency
    - find: 
        path: .block-fp--reference 
        do: 
        - parse:
            filter:
                - REFERENCE\s*-\s*(.+)
        - space_dedupe
        - trim
        - if:
            match: \S
            do:
            - object_field_set:
                object: product
                field: sku
    - find: 
        path: .js-swatch .js-product-selector 
        do: 
        - parse:
            attr: data-swatch-name
        - space_dedupe
        - trim
        - if:
            match: \S
            do:
            - object_field_set:
                object: product
                field: variations
                joinby: "|"
    - find: 
        path: meta[name="gsa-subtitle"] 
        do: 
        - parse:
            attr: content
        - space_dedupe
        - trim
        - if:
            match: (\S)
            do:
            - object_field_set:
                object: product
                field: name
    - find: 
        path: .quickbuy-title 
        do: 
        - parse
        - space_dedupe
        - trim
        - if:
            match: (\S)
            do:
            - object_field_set:
                object: product
                field: name
    - find: 
        path: '[data-product-name]' 
        do: 
        - parse:
            attr: data-product-name
        - space_dedupe
        - trim
        - if:
            match: (\S)
            do:
            - object_field_set:
                object: product
                field: name
    - find: 
        path: .js-zoom-trigger
        slice: 0
        do: 
        - parse:
            attr: data-zoom-views
        - normalize:
            routine: json2xml
        - to_block
        - find: 
            path: element > src 
            do: 
            - parse
            - if:
                match: \S
                do:
                - normalize:
                    routine: url
                - object_field_set:
                    object: product
                    field: images
                    joinby: "|"
    - find: 
        path: meta[name="gsa-sku"] 
        do: 
        - parse:
            attr: content
        - register_set: <p><%register%></p>
        - to_block
        - find: 
            path: p 
            do: 
            - split:
                context: text
                delimiter: \|
            - find: 
                path: .splitted 
                do: 
                - parse
                - space_dedupe
                - trim
                - if:
                    match: \S
                    do:
                    - object_field_set:
                        object: product
                        field: sku
    - find: 
        path: 'meta[itemprop="brand"]' 
        do: 
        - parse:
            attr: content
        - space_dedupe
        - trim
        - if:
            match: \S
            do:
            - object_field_set:
                object: product
                field: brand
    - find: 
        path: .block-fp--text:has(h4:matches((THE\s*INSPIRATION))) > p, .product-description-content
        do: 
        - parse
        - space_dedupe
        - trim
        - if:
            match: \S
            do:
            - variable_set:
                field: insp
                value: 1
            - object_field_set:
                object: product
                field: description
    - find: 
        path: .block-fp--text:has(h4:matches((DESCRIPTION)|(Description))) > p
        do: 
        - variable_get: insp
        - if:
            match: \d
            else:
            - parse
            - space_dedupe
            - trim
            - if:
                match: \S
                do:
                - object_field_set:
                    object: product
                    field: description
    - find: 
        path: script:matches(productsheetProduct) 
        do: 
        - parse
        - eval:
            routine: js
            body: (function () {<%register%> return JSON.stringify(c_productsheetProduct);})();
        - normalize:
            routine: json2xml
        - to_block
        - find: 
            path: productcover desktopzoom 
            do: 
            - parse
            - if:
                match: \S
                do:
                - normalize:
                    routine: url
                - object_field_set:
                    object: product
                    field: images
                    joinby: "|"
        - find: 
            path: colors name 
            do: 
            - parse
            - space_dedupe
            - trim
            - if:
                match: \S
                do:
                - object_field_set:
                    object: product
                    field: variations
                    joinby: "|"
                
        - find: 
            path: sections:has(title:matches((DESCRIPTION)|(Description))) > content
            do: 
            - parse
            - space_dedupe
            - trim
            - if:
                match: \S
                do:
                - object_field_set:
                    object: product
                    field: description
    - find:
        path: head
        do:
        - eval:
            routine: js
            body: '(function (){var d = new Date(); return d.toISOString()})();'
        - object_field_set:
            object: product
            field: date
        - static_get: url
        - object_field_set:
            object: product
            field: url
    - object_save: 
        name: product
