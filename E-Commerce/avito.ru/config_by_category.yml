#avitoru digger
---
config:
    debug: 2
    agent: "Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Mobile Safari/537.36"
    ssl:
        version: TLSv1.2
        cipher: ECDHE ECDSA AES 256 GCM SHA384
    proxy:
        type: residential
do:
- variable_set:
    field: collectPhone
    value: "yes"
- variable_set:
    field: rip
    value: "yes"
- walk:
    to: links
    repeat_in_pool: <%rip%>
    do:
    - variable_clear: key
    - variable_clear: sp
    - variable_clear: laststamp
    - find:
        path: script
        do:
        - variable_get: key
        - if:
            match: \S
            else:
            - parse:
                attr: src
            - if:
                match: mstatic\/build
                do:
                - set_converter:
                    content_type: application/javascript
                    converter: image
                - walk:
                    to: value
                    do:
                    - variable_clear: filt
                    - find: 
                        path: imgbase64
                        do: 
                        - parse
                        - normalize:
                            routine: Base64Decode
                        - filter: 
                            args:
                            - params\:\s*\{\s*key\:\s*\"?([A-Za-z0-9\$]+)\"?\s*\}\,data
                        - normalize:
                            routine: replace_substring
                            args:
                                \$: '\$'
                        - variable_set: filt
                        - parse
                        - normalize:
                            routine: Base64Decode
                        - filter:
                            args:
                            - <%filt%>\s*\=\s*\"([a-z0-9]{44})\"
                        - if:
                            match: \S
                            do:
                            - variable_set: key
                - clear_converter:
                    content_type: application/javascript
    - find:
        path: html
        do:
        - variable_get: key
        - if:
            match: \w+
            do:
            - variable_set:
                field: rip
                value: "no"
            - find:
                path: script:contains('window.__initialData__')
                do:
                - parse:
                    filter:
                        - (window\.\_\_initialData\_\_\s*\=\s*\"[^\"]+\s*\")\s*;\s*window\.\_\_pluginsData
                        - (window\.\_\_initialData\_\_\s*\=\s*\"[^\"]+\s*\")\s*;
                        - (.+)
                - normalize:
                    routine: replace_substring
                    args:
                        - \": ""
                
                - normalize:
                    routine: URLDecode
                - eval:
                    routine: js
                    body: (function () {var window = {}; <%register%>;if (typeof window.__initialData__ === 'string' || window.__initialData__ instanceof String) {return JSON.stringify(JSON.parse(window.__initialData__));} else {return JSON.stringify(window.__initialData__);};})();
                - normalize:
                    routine: json2xml
                - to_block
                - find:
                    path: search > searchparams > *
                    do:
                    - variable_get: nodeName
                    - normalize:
                        routine: replace_substring
                        args:
                        - categoryid: categoryId
                        - locationid: locationId
                    - if:
                        match: 'owner'
                        do:
                        - register_set: owner%5B0%5D
                        - variable_set: nodeName
                    - variable_set: nodeName
                    - parse
                    - normalize:
                        routine: urlencode
                    - register_set: <%sp%>&<%nodeName%>=<%register%>
                    - variable_set: sp
                - register_set: key=<%key%><%sp%>
                - variable_set: sp
                - find:
                    path: search > laststamp
                    do:
                    - parse
                    - variable_set: laststamp
            - variable_set:
                field: repeat
                value: "yes"
            - variable_set:
                field: page
                value: 1
            - walk:
                to: https://m.avito.ru/api/9/items?<%sp%>&page=<%page%>&lastStamp=<%laststamp%>&display=list&limit=30
                header:
                    Referer: ''
                repeat: <%repeat%>
                do:
                - variable_clear: catok
                - variable_set:
                    field: repeat
                    value: "yes"
                - sleep: 3
                - find:
                    path: status
                    do:
                    - variable_set:
                        field: repeat
                        value: "no"
                    - variable_set:
                        field: catok
                        value: 1
                    - eval:
                        routine: js
                        body: (function () {var page = <%page%>; return page + 1;})();
                    - variable_set: page
                - find:
                    path: result > laststamp
                    do:
                    - parse
                    - variable_set: laststamp
                - find:
                    path: result > items > value > uri_mweb
                    do:
                    - variable_set:
                        field: repeat
                        value: "yes"
                    - parse
                    - if:
                        match: \w+
                        do:
                        - normalize:
                            routine: url
                        - variable_set:
                            field: repeat2
                            value: "yes"
                        - walk:
                            to: value
                            repeat: <%repeat2%>
                            do:
                            - sleep: 3
                            - find:
                                path: 'div#app'
                                do:
                                - variable_set:
                                    field: repeat2
                                    value: "no"
                                - object_new: item
                                - static_get: url
                                - object_field_set:
                                    object: item
                                    field: url
                                - find: 
                                    path: script:matches(window\.\_\_initialData\_\_\s*\=) 
                                    in: doc
                                    do: 
                                    - parse:
                                        filter:
                                            - (window\.\_\_initialData\_\_\s*\=\s*\"[^\"]+\s*\")\s*;\s*window\.\_\_pluginsData
                                            - (window\.\_\_initialData\_\_\s*\=\s*\"[^\"]+\s*\")\s*;
                                            - (.+)
                                    - normalize:
                                        routine: replace_substring
                                        args:
                                            - \": ""
                                    
                                    - normalize:
                                        routine: URLDecode
                                    - eval:
                                        routine: js
                                        body: (function () {var window = {}; <%register%>;if (typeof window.__initialData__ === 'string' || window.__initialData__ instanceof String) {return JSON.stringify(JSON.parse(window.__initialData__));} else {return JSON.stringify(window.__initialData__);};})();
                                    - normalize:
                                        routine: json2xml
                                    - to_block
                                    - find: 
                                        path: body_safe 
                                        do: 
                                        - find: 
                                            path: list:hasChild(type:matches(phone)) > value > uri
                                            do: 
                                            - parse:
                                                filter: 
                                                    - number\=(.+)\s*$
                                            - if:
                                                match: \d
                                                do:
                                                - normalize:
                                                    routine: URLDecode
                                                - object_field_set:
                                                    object: item
                                                    field: phone
         
                                        - find: 
                                            path: 'images > safe_640x480'
                                            do: 
                                            - parse
                                            - if:
                                                match: \S
                                                do:
                                                - object_field_set:
                                                    object: item
                                                    field: image
                                                    joinby: "|"
                                        - find: 
                                            path: coords 
                                            do: 
                                            - find: 
                                                path: lat
                                                do: 
                                                - parse
                                                - if:
                                                    match: \S
                                                    do:
                                                    - object_field_set:
                                                        object: item
                                                        field: lat
                                                        type: float
                                            - find: 
                                                path: lng 
                                                do: 
                                                - parse
                                                - if:
                                                    match: \S
                                                    do:
                                                    - object_field_set:
                                                        object: item
                                                        field: lng
                                                        type: float
                                        - find: 
                                            path: item > id
                                            do: 
                                            - parse:
                                                filter: (\d+)
                                            - space_dedupe
                                            - trim
                                            - object_field_set:
                                                object: item
                                                field: id
                                            - variable_set: itemid
                                            - variable_get: collectPhone
                                            - variable_set: pr
                                            - walk:
                                                to: https://m.avito.ru/api/1/items/<%itemid%>/phone?key=<%key%>
                                                repeat: <%pr%>
                                                do:
                                                - find:
                                                    path: title
                                                    do:
                                                    - parse
                                                    - if:
                                                        match: (Доступ с вашего IP-адреса временно ограничен)|(Доступ временно заблокирован)
                                                        do:
                                                        - info: Proxy is banned, switching
                                                        - proxy_switch
                                                        - cookie_reset
                                                        - variable_set:
                                                            field: pr
                                                            value: "yes"
                                                - find: 
                                                    path: message
                                                    do: 
                                                    - parse
                                                    - info: <%register%>
                                                    - variable_set:
                                                        field: pr
                                                        value: "no"
                                                - find: 
                                                    path: uri 
                                                    do: 
                                                    - variable_set:
                                                        field: pr
                                                        value: "no"
                                                    - parse:
                                                        filter:
                                                            - number\=([^?]+)
                                                    - if:
                                                        match: \d
                                                        do:
                                                        - normalize:
                                                            routine: URLDecode
                                                        - object_field_set:
                                                            object: item
                                                            field: phone
                                                        else:
                                                        - parse
                                                        - if:
                                                            match: authenticate
                                                            do:
                                                            - info: You need to login to see this phone number
                                        - find: 
                                            path: item > time
                                            do: 
                                            - parse:
                                                filter: (\d+)
                                            - if:
                                                match: \d+
                                                do:
                                                - normalize:
                                                    routine: date_format
                                                    args:
                                                        format_in: "%s"
                                                        format_out: "%Y-%m-%d %T"
                                                - object_field_set:
                                                    object: item
                                                    field: actualized
                                        - find: 
                                            path: item > stats > views > total
                                            do: 
                                            - parse:
                                                filter: (\d+)
                                            - if:
                                                match: \d+
                                                do:
                                                - object_field_set:
                                                    object: item
                                                    field: views_total
                                        - find: 
                                            path: item > stats > views > today
                                            do: 
                                            - parse:
                                                filter: (\d+)
                                            - if:
                                                match: \d+
                                                do:
                                                - object_field_set:
                                                    object: item
                                                    field: views_today
                                - find:
                                    path: 'h1[itemprop="name"]'
                                    in: doc
                                    do:
                                    - parse
                                    - space_dedupe
                                    - trim
                                    - object_field_set:
                                        object: item
                                        field: title
                                - find:
                                    path: 'meta[itemprop="priceCurrency"]'
                                    do:
                                    - parse:
                                        attr: content
                                    - object_field_set:
                                        object: item
                                        field: currency
                                - find: 
                                    path: 'meta[itemprop="price"]' 
                                    do: 
                                    - parse:
                                        attr: content
                                    - object_field_set:
                                        object: item
                                        field: price
                                - find:
                                    path: 'meta[itemprop="description"]'
                                    do:
                                    - parse:
                                        attr: content
                                    - space_dedupe
                                    - trim
                                    - object_field_set:
                                        object: item
                                        field: description
                                - find:
                                    path: 'span[data-marker="delivery/location"]'
                                    do:
                                    - parse
                                    - space_dedupe
                                    - trim
                                    - object_field_set:
                                        object: item
                                        field: address
         
                                - find:
                                    path: 'span[data-marker="seller-info/name"]'
                                    do:
                                    - parse
                                    - space_dedupe
                                    - trim
                                    - object_field_set:
                                        object: item
                                        field: seller
                                - object_save:
                                    name: item
                            - find:
                                path: body
                                do:
                                - variable_get: repeat2
                                - if:
                                    match: "yes"
                                    do:
                                    - error: Page changed layout or proxy is banned, retrying
                                    - proxy_switch
                                    - cookie_reset
                - find:
                    path: html
                    do:
                    - variable_get: catok
                    - if:
                        match: 1
                        else:
                        - error: "no data returned, retrying"
                        - proxy_switch
                        - cookie_reset
            else:
            - error: No key found, probably proxy is banned, retrying
            - variable_set:
                field: rip
                value: "yes"
            - proxy_switch
            - cookie_reset
