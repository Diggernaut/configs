---
config:
    debug: 2
    agent: Firefox
do:
- walk:
    to: https://www.johnvarvatos.com/
    do:
    - find: 
        path: .nav-level-3-link 
        do: 
        - parse:
            attr: href
        - normalize:
            routine: url
        - link_add
- walk:
    to: links
    do:
    - pool_clear: catalog
    - find:
        path: div.search-category-meta
        do:
        - parse:
            attr: data-category
        - register_set: https://www.johnvarvatos.com/<%register%>/?sz=12&start=0&format=page-element
        - link_add:
            pool: catalog
        - walk:
            to: links
            pool: catalog
            do:
            - find:
                path: div.infinite-scroll-placeholder
                do:
                - parse:
                    attr: data-grid-url
                - space_dedupe
                - trim
                - if:
                    match: \w+
                    do:
                    - normalize:
                        routine: url
                    - link_add:
                        pool: catalog
            - find:
                path: a.product-tile-name-link
                do:
                - parse:
                    attr: href
                    filter: ^([^\?]+)
                - space_dedupe
                - trim
                - if:
                    match: \w+
                    do:
                    - normalize:
                        routine: url
                    - link_add:
                        pool: pages
- walk:
    to: links
    pool: pages
    do:
    - sleep: 2
    - find:
        path: 'div#pdpMain'
        do:
        - variable_clear: desc
        - variable_clear: pid
        - object_new: product
        - eval:
            routine: js
            body: '(function (){var d = new Date(); return d.toISOString()})();'
        - object_field_set:
            object: product
            field: date
        - static_get: url
        - object_field_set:
            object: product
            field: url
        - find:
            path: h1.product-name
            do:
            - parse
            - space_dedupe
            - trim
            - object_field_set:
                object: product
                field: name
        - register_set: John Varvatos
        - object_field_set:
            object: product
            field: brand
        - find:
            in: doc
            path: ol.product-breadcrumbs>li>a
            do:
            - parse
            - space_dedupe
            - trim
            - if:
                match: \w+
                do:
                - object_field_set:
                    object: product
                    joinby: "|"
                    field: categories
        - find:
            path: div.product-style
            do:
            - node_remove: span
            - parse
            - space_dedupe
            - trim
            - if:
                match: \w+
                do:
                - variable_set: pid
                - object_field_set:
                    object: product
                    field: sku
        - find:
            path: div.product-image>img.primary-image
            do:
            - parse:
                attr: src
                filter: ^(.+\/johnvarvatos\/[^\/]+)\/
            - space_dedupe
            - trim
            - if:
                match: \w+
                do:
                - normalize:
                    routine: url
                - object_field_set:
                    object: product
                    joinby: "|"
                    field: images
            - parse:
                attr: src
                filter: \/johnvarvatos\/([^\/]+)\/
            - normalize:
                routine: replace_substring
                args:
                    \-[A-Z]+$: ''
            - register_set: https://i1.adis.ws/s/johnvarvatos/<%register%>_set.json
            - walk:
                to: value
                do:
                - find:
                    path: items>src
                    do:
                    - parse:
                        filter: ^([^\?]+)
                    - space_dedupe
                    - trim
                    - if:
                        match: \w+
                        do:
                        - normalize:
                            routine: url
                        - normalize:
                            routine: replace_substring
                            args:
                                ^http\:\/\/: 'https://'
                        - object_field_set:
                            object: product
                            joinby: "|"
                            field: images

        - find:
            path: ul.Color>li>a
            do:
            - parse:
                attr: title
            - space_dedupe
            - trim
            - if:
                match: \w+
                do:
                - object_field_set:
                    object: product
                    joinby: "|"
                    field: variations
            - find:
                path: img
                do:
                - parse:
                    attr: src
                    filter: \/johnvarvatos\/([^\/]+)\/
                - normalize:
                    routine: replace_substring
                    args:
                        \-[A-Z]+$: ''
                - register_set: https://i1.adis.ws/s/johnvarvatos/<%register%>_set.json
                - walk:
                    to: value
                    do:
                    - find:
                        path: items>src
                        do:
                        - parse:
                            filter: ^([^\?]+)
                        - space_dedupe
                        - trim
                        - if:
                            match: \w+
                            do:
                            - normalize:
                                routine: url
                            - normalize:
                                routine: replace_substring
                                args:
                                    ^http\:\/\/: 'https://'
                            - object_field_set:
                                object: product
                                joinby: "|"
                                field: images
        - find:
            in: doc
            path: meta[name="description"]
            do:
            - parse:
                attr: content
            - space_dedupe
            - trim
            - variable_set: desc
        - find:
            path: div.product-description
            do:
            - node_remove: ul
            - parse
            - space_dedupe
            - trim
            - variable_set: desc
        - variable_get: desc
        - object_field_set:
            object: product
            field: description
        - find:
            path: div.product-price
            do:
            - find: 
                path: div
                slice: 0
                do: 
                - parse:
                    filter: 
                        - \$\s*([0-9\.\,]+)\s*-
                        - \$\s*([0-9\.\,]+)
                - normalize:
                    routine: replace_substring
                    args:
                        \,: ''
                - space_dedupe
                - trim
                - object_field_set:
                    object: product
                    type: float
                    field: price
                - parse
                - normalize:
                    routine: replace_matched
                    args:
                        \$: USD
                - object_field_set:
                    object: product
                    field: currency
            - find:
                path: span[itemprop="lowPrice"]
                do:
                - parse:
                    attr: content
                    filter: ([0-9\.\,]+)
                - normalize:
                    routine: replace_substring
                    args:
                        \,: ''
                - space_dedupe
                - trim
                - if:
                    match: \d
                    do:
                    - object_field_set:
                        object: product
                        type: float
                        field: price
            - find:
                path: span[itemprop="priceCurrency"]
                do:
                - parse
                - normalize:
                    routine: replace_matched
                    args:
                        \$: USD
                - object_field_set:
                    object: product
                    field: currency
            - find:
                path: span.price-list
                do:
                - parse:
                    filter:
                    - \$\s*([0-9\.\,]+)\s*-
                    - \$\s*([0-9\.\,]+)
                - normalize:
                    routine: replace_substring
                    args:
                        \,: ''
                - space_dedupe
                - trim
                - if:
                    match: \d
                    do:
                    
                    - object_field_set:
                        object: product
                        type: float
                        field: price
                - parse
                - normalize:
                    routine: replace_matched
                    args:
                        \$: USD
                - object_field_set:
                    object: product
                    field: currency
            - find:
                path: span.price-sales
                do:
                - parse:
                    filter:
                    - \$\s*([0-9\.\,]+)\s*-
                    - \$\s*([0-9\.\,]+)
                - normalize:
                    routine: replace_substring
                    args:
                        \,: ''
                - space_dedupe
                - trim
                - if:
                    match: \d+
                    do:
                    - object_field_set:
                        object: product
                        type: float
                        field: price
                - parse
                - if:
                    match: \d+
                    do:
                    - normalize:
                        routine: replace_matched
                        args:
                            \$: USD
                    - object_field_set:
                        object: product
                        field: currency
        - object_save:
            name: product
